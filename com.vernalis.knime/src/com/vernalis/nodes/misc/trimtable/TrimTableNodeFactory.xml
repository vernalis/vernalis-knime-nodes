<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2019, Vernalis (R&D) Ltd
	This program is free software; you can redistribute it and/or modify it
	under the terms of the GNU General Public License, Version 3, as
	published by the Free Software Foundation.

	This program is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	See the GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, see <http://www.gnu.org/licenses>
-->
<knimeNode
	icon="TrimTable.png"
	type="Manipulator"
	xmlns="http://knime.org/node/v3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">
	<name>Trim Table</name>

	<shortDescription>
		This node trims rows from the start and end of the table when they contain missing values in selected columns
	</shortDescription>

	<fullDescription>
		<intro>

			This node trims rows of missing values from the start and end of
			the
			table, according to the settings. Consider the following table:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row0</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row2</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row3</td>
					<td>World</td>
					<td>?</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row4</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row5</td>
					<td>?</td>
					<td>?</td>
					<td>?</td>
				</tr>
			</table>

			Selecting All columns in the node dialog, with both trim start and
			trim end options selected,
			and the trim behaviour set as 'Require All'
			will result in only
			Row1 being kept:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>

			</table>
			<br />
			Only selecting the trim start option would result in Row1 to the end
			of the table being kept:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row2</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row3</td>
					<td>World</td>
					<td>?</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row4</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row5</td>
					<td>?</td>
					<td>?</td>
					<td>?</td>
				</tr>
			</table>
			and only selecting trim end would result in Row0 and Row1 being kept:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row0</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>
			</table>
			<br />
			Changing the trim behaviour to 'Require Any', with both trim start
			and
			trim end options selected, will result in Row0 to
			Row4 being kept:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row0</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row2</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row3</td>
					<td>World</td>
					<td>?</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row4</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
			</table>

			<br />
			Selecting only Col1, with either trim behaviour selected (they are
			degenerate for a single column), will result in Row1 to Row3 being
			kept:
			<table>
				<tr>
					<th></th>
					<th>Col1</th>
					<th>Col2</th>
					<th>Col3</th>
				</tr>
				<tr>
					<td>Row1</td>
					<td>Hello</td>
					<td>Foo</td>
					<td>Bah</td>
				</tr>
				<tr>
					<td>Row2</td>
					<td>?</td>
					<td>Foo</td>
					<td>?</td>
				</tr>
				<tr>
					<td>Row3</td>
					<td>World</td>
					<td>?</td>
					<td>Bah</td>
				</tr>
			</table>

			<b>NB</b>
			-
			<i>
			The missing value in Row2 is retained, as there is a row which
			passes the filter later in the table (Row3)</i>

			<br />
			Node execution follows the following order in node progress
			<ol>
				<li>
					<i>Looking for first include row</i>
					(Only if 'Trim Start' is selected) - The node is working from the
					start of the table, looking for the first row to include in the
					output
				</li>
				<li>
					<i>Adding rows to table</i>
					- The first row to be included has been found, and rows are now
					being added to the output table. This continues until the end of
					the table if 'Trim End' is not selected, or until a row failing
					the
					include filter is found
				</li>
				<li>
					<i>Checking for further matching rows at end of table</i>
					(Only if 'Trim End' is selected) - The node is now looking ahead
					in
					the table to see if any more rows should be added to the table
					after the current row, which failed the include filter. Progress
					per row is now 1/2 what it was above, as each row could need to be
					processed twice. Rows are added to a temporary table
				</li>
				<li>
					<i>Merging temporary tables</i>
					(Only if 'Trim End' is selected, and the previous stage found any
					further rows to add to the table) - The node is now adding the
					rows
					required to be kept from the temporary table to the output
					table.
					The remaining progress is divided equally amongst the
					actual number
					of rows to be added to the output from the temporary
					table
				</li>
			</ol>
			<br />
			<p>
				This node was developed by
				<a href="https://www.vernalis.com/">Vernalis Research (Cambridge, UK)</a>
				.
				For feedback and more information, please contact
				<a href="mailto:knime@vernalis.com">knime@vernalis.com</a>
			</p>

		</intro>

		<option name="Column selector">Select the columns to be used for filtering
		</option>
		<option name="Trim Start">Should columns at the start of the table be
			removed if they fail the 'Trim Behaviour' setting?
		</option>
		<option name="Trim End">Should columns at the end of the table be removed
			if they fail the 'Trim Behaviour' setting?
		</option>
		<option name="Trim Behaviour">'Require All' only keeps rows at the ends of the
			table in which all the selected columns are not missing values.
			'Require Any' is a softer filter, keeping a row if any of the
			selected columns are non-missing.
		</option>
	</fullDescription>

	<ports>
		<inPort
			name="Input table"
			index="0">A table to filter</inPort>

		<outPort
			index="0"
			name="Filtered Table">The filtered input table</outPort>
	</ports>

</knimeNode>
