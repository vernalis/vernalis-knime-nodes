<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE knimeNode>
<!--
	Copyright (c) 2018, Vernalis (R&D) Ltd
	This program is free software; you can redistribute it and/or modify it
	under the terms of the GNU General Public License, Version 3, as
	published by the Free Software Foundation.

	This program is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	See the GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, see <http://www.gnu.org/licenses>
-->
<knimeNode
	icon="loadsdf.png"
	type="Source"
	xmlns="http://knime.org/node/v3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">
	<name>Load SD-Files (SDF)</name>

	<shortDescription>
		Node to load one or more sd-files into a KNIME Table
	</shortDescription>

	<fullDescription>
		<intro>
			<p>Each sd-file is loaded and parsed such that one output
				row of
				the
				table contains the data for 1 compound in the sd-file. The node
				attempts to parse the header block, subject to a number of caveats.
				Firstly, not all SDF writers produce correctly formatted MOL block
				headers, in particular in the second line. Incorrectly formatted
				lines will be parsed as if they were correctely formatted, which
				might result in spurious contents in some columns. The parsing is
				permissive, so the node will not fail to execute with poor
				formatting. Secondly, V3000 mol and sd-files use '0' counts in the
				header counts line. It is these counts which are reported, not the
				new 'M V30 COUNTS ...' line
			</p>

			<p>
				This node was developed by
				<a href="https://www.vernalis.com/">Vernalis Research</a>
				.
				For feedback and more information, please contact
				<a href="mailto:knime@vernalis.com">
					knime@vernalis.com
				</a>
			</p>
		</intro>


		<option name="Select files">Use the 'Browse...' and 'Add from history' buttons
			to add all the files to be included in the table. Alternatively, a
			flow variable can be specified, containing one or more filenames
			separated by ';'. The latest added file(s) will be selected. If no
			files are highlighted in the 'Selected files' box, then the
			'Browse...' button opens a new file browser window in the default
			location; otherwise, the file browser opens in the last highlighted
			file's location.
		</option>
		<option name="Select file encoding">Select the file encoding. 'Guess' will attempt to
			assign it based on the connection property of the URL, the
			content-type, and the Byte-Order Mark (BOM). UTF-8 will be used if no
			other encoding is identified
		</option>
		<option name="Include paths in output table">Include the full file path and URLs as columns in
			the output table
		</option>
		<option name="Include filename in Row IDs">The filename will be included in the Row ID
			(duplicated will be suffixed with '_n', where n is an index starting
			at 0). Otherwise, the Row IDs will be in the format 'Row_n', with an
			an index starting at 0
		</option>
		<option name="Include filenames in output table">Include the filename as a column in the output
			table</option>
		<option name="Newline output">The newline character(s) to be used in the SDF
			Cell.
			'System' will dynamically use the the newline of the system the
			node
			is executed on (the current value for this is shown in the
			dialog,
			but on another system, the local value will be used).
			'Preserve
			incoming' will look in the first 65535 characters of the
			file for the
			first linebreak ('\r\n' or '\n') and use that.</option>
	</fullDescription>

	<ports>
		<inPort
			index="0"
			name="Flow variables">Optional flow variables containing file path(s)</inPort>

		<outPort
			index="0"
			name="SD-File molecules">Parsed content of the loaded files
		</outPort>

	</ports>

</knimeNode>
