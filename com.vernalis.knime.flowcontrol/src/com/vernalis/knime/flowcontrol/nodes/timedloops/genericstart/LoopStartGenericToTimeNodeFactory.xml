<?xml version="1.0" encoding="UTF-8"?>
<knimeNode
	icon="./GenericLoopStartToTimed.png"
	type="LoopStart"
	xmlns="http://knime.org/node/v3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">
	<name>Generic Run-to-time Loop Start</name>

	<shortDescription>
        Loop start node to repeatedly process entire input table until a specified time of day has passed.
    </shortDescription>

	<fullDescription>
		<intro>
			<p>Loop start node to repeatedly process entire input table until a
				specified time of day has passed. The user can
				specify the time
				(hh:mm)
				at which the last
				iteration will start
				before.
				The loop will
				execute until that time period has
				elapsed.
				If connected
				to a
				Run-to-time Loop end, the unprocessed rows table will be empty
				for
				this node as all rows are processed repeatedly on each loop
				iteration.
			</p>
			<p>
				This node was developed by
				<a href="https://www.vernalis.com/">Vernalis Research</a>
				.
				For feedback and more information, please contact
				<a href="mailto:knime@vernalis.com">
					knime@vernalis.com
				</a>
			</p>
		</intro>

		<option name="End time (hh:mm):">The time at which execution will finish (hh : mm)
		</option>
		<option name="Run to tomorrow">If the expiry time has already passed today at
			the time of loop execution commencement
			it will run until that time
			tomorrow
		</option>
		<option name="Run through weekend">If the expiry time (accounting for the 'Run to
			tomorrow' setting) is on a
			Saturday or Sunday, then the loop will run
			until that time on the following
			Monday
		</option>
		<option name="Start value of iteration counter">Allows the user to manually set the value at
			which the iteration
			counter will start (does not affect the
			processing of the table!)
		</option>
	</fullDescription>

	<ports>
		<inPort
			index="0"
			name="In Data">Input table to process</inPort>
		<outPort
			index="0"
			name="Chunked Data">Unchanged input table</outPort>
	</ports>
</knimeNode>
