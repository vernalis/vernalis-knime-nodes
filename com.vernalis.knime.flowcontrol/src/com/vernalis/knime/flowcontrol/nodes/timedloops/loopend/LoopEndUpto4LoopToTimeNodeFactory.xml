<?xml version="1.0" encoding="UTF-8"?>
<knimeNode
	icon="./LoopEndTimed.png"
	type="LoopEnd"
	xmlns="http://knime.org/node/v3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">
	<name>Timed Loop End (Upto 4 ports)</name>

	<shortDescription>
        Loop End node for timed loops, exposing unprocessed rows in the final port
    </shortDescription>

	<fullDescription>
		<intro>
			<p>Loop end node to partner with 'Run-to-time' and 'Run-for-time'
				loop start nodes. Rows which were not processed
				before the loop
				execution finished as a result of the time setting of the
				loop start
				node are made available at the
				last output port. The behaviour of
				non-connected optional ports is goverened by they user settings
			</p>
			<p>
				This node was developed by
				<a href="https://www.vernalis.com/">Vernalis Research</a>
				.
				For feedback and more information, please contact
				<a href="mailto:knime@vernalis.com">
					knime@vernalis.com
				</a>
			</p>
		</intro>


		<option name="Row key policy">
			How should row keys, which must be unique, be
			generated in the output
			table? '
			<i>Generate new Row IDs</i>
			' generates new row IDs sequential in the form Row0, Row1 etc.; '
			<i>Unique Row IDs by appending suffix</i>
			' appends '_Iter#' and the iteration number to the incoming Row ID; '
			<i>Leave Row IDs unchanged</i>
			' leaves incoming Row IDs unchanged. Nodes which previously had
			'Uniquify Row IDs' set, will follow the second option
		</option>
		<option name="Add iteration column">Adds a column to the output table containing the
			iteration number, starting with 0
		</option>

		<option name="Ignore empty input tables">Selecting this option means the structure of empty
			input tables at the
			specified port will be ignored and they will not
			cause the node to fail
		</option>
		<option name="Allow changing column types">Tables in which the column names remain constant,
			but the types change between iterations will be allowed to pass. The
			type of columns changed will be the simplest type common to all input
			types. A message will be sent to the console explaining any failures
		</option>
		<option name="Allow changing table specs">Tables in which more complex changes to the table
			structure occur will be allowed to pass. This setting overrides the
			'Allow changing column types' setting. If this option is not set, a
			message will be sent to the console explaining any failures.
		</option>
		<option name="Return inactive branches for disconnected optional ports">If selected, optional input ports which are
			disconnected will
			have inactive branches as output ports. Otherwise,
			an empty, columnless
			table will result
		</option>

	</fullDescription>

	<ports>
		<inPort
			index="0"
			name="In-Port 0">Loop data (0)</inPort>
		<inPort
			index="1"
			name="In-Port 1 (optional)">Optional Loop data (1)</inPort>
		<inPort
			index="2"
			name="In-Port 2 (optional)">Optional Loop data (2)</inPort>
		<inPort
			index="3"
			name="In-Port 3 (optional)">Optional Loop data (3)</inPort>
		<outPort
			index="0"
			name="Processed Data (0)">Data processed in the loop (0)
		</outPort>
		<outPort
			index="1"
			name="Processed Data (1)">Data processed in the loop (1)
		</outPort>
		<outPort
			index="2"
			name="Processed Data (2)">Data processed in the loop (2)
		</outPort>
		<outPort
			index="3"
			name="Processed Data (3)">Data processed in the loop (3)
		</outPort>
		<outPort
			index="4"
			name="Unprocessed Data">Data not processed in the loop due to
			time-out
		</outPort>
	</ports>
</knimeNode>
